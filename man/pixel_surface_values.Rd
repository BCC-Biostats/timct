% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pixel_surface_values.R
\name{pixel_surface_values}
\alias{pixel_surface_values}
\title{Fit a Kernel Regression Surface and Predict Cell Values Using np Package}
\usage{
pixel_surface_values(cells, pixels, bw = NULL)
}
\arguments{
\item{cells}{A data frame with columns \code{x} and \code{y} representing the coordinates of the cells.}

\item{pixels}{A data frame with columns \code{x}, \code{y}, and \code{value} representing the pixel coordinates and intensities.}

\item{bw}{Optional bandwidth object. If not provided, one will be selected automatically using npregbw.}
}
\value{
A numeric vector of predicted surface values (z) corresponding to each cell.
}
\description{
This function fits a nonparametric regression surface to pixel data using a Gaussian kernel
via the np package. It then predicts the z value for each cell provided by interpolating
the fitted surface. The np package efficiently computes the kernel regression.
}
\examples{
\dontrun{
  # Ensure the np package is installed: install.packages("np")
  library(np)
  set.seed(123)
  # Generate example pixel data
  pixels <- data.frame(
    x = runif(100, 0, 5),
    y = runif(100, 0, 5),
    value = rnorm(100)
  )
  # Define cell locations where predictions are desired
  cells <- data.frame(
    x = c(1, 2, 3),
    y = c(1, 2, 3)
  )
  # Fit the surface and predict cell values
  preds <- predict_surface_cells_np(cells, pixels)
  print(preds)
}

}
