% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_dir_structure.R
\name{get_dir_structure}
\alias{get_dir_structure}
\title{Recursively Get Directory Structure}
\usage{
get_dir_structure(
  path = ".",
  full.names = TRUE,
  return = c("list", "data.frame")
)
}
\arguments{
\item{path}{A character string specifying the root directory to start from. Defaults to the current working directory.}

\item{full.names}{Logical. If \code{TRUE}, return full paths; if \code{FALSE}, return relative paths. Defaults to \code{TRUE}.}

\item{return}{A character string indicating the type of output: \code{"list"} for a nested list or \code{"data.frame"} for a flat data frame.
Defaults to \code{"list"}.}
}
\value{
Either a nested list (if \code{return = "list"}) or a data frame (if \code{return = "data.frame"}).
}
\description{
This function returns either a nested list-of-lists representing the file and folder structure
or a flat data frame listing all files and directories under a specified path.
}
\details{
When using the list output, if \code{full.names = FALSE} then each folder's contents are returned as relative names.
For the data frame output, a row is generated for every file or directory, with a column indicating whether it is a directory.
}
\examples{
# Get nested list structure with full paths (default)
get_dir_structure("my_folder")

# Get nested list structure with relative paths
get_dir_structure("my_folder", full.names = FALSE)

# Get data frame listing all files and directories with full paths
get_dir_structure("my_folder", return = "data.frame")

}
